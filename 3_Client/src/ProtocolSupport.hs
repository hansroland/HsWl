{-# LANGUAGE OverloadedStrings #-}

module ProtocolSupport where

-- This module contains functions that are used in the code generated by
-- the Haskell Wayland code generator.

import           Types

import Data.Binary
import           Data.Binary.Put
import           Data.Text (Text)
import qualified Data.ByteString            as BL
import qualified Data.Text                  as T
import qualified Data.Text.IO               as TIO

import Text.Printf


runByteString :: Put -> BL.ByteString
runByteString = BL.toStrict . runPut

unhandledEv :: Text -> WOpc -> IO()
unhandledEv ifName opc = TIO.putStrLn $
   "ATTENTION UNHANDLED EVENT " <> ifName <> " " <>  T.pack (show opc)

initActiveIfaces :: [IfacKey]
initActiveIfaces = [ (1, "wl_display")]

toHexText :: BL.ByteString -> Text
toHexText =  T.pack . toHexString

toHexString :: BL.ByteString -> String
toHexString = BL.foldr ((<>) . printf "%02x") ""
